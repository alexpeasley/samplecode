
//More SQL this was built to backfill tables that our Business Intelligence team still uses. The old program used vb and inline sql populate the tables.
//We now use SSIS/Combined with c# to populate a more well designed solution. 
USE [pbm]
GO

/****** Object:  StoredProcedure [dbo].[sp_InsertPaidNavitusClaims]    Script Date: 12/19/2017 9:42:33 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




-- =============================================
-- Author:		Alex Peasley
-- Create date: 03082016
-- Description:	Insert Bi-Monthly NAVITUS Claims records into clarity.dbo.EX_RX_CLAIM table
-- =============================================
CREATE PROCEDURE [dbo].[sp_InsertPaidNavitusClaims]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
DECLARE @FILE_ID INT
SET @FILE_ID = (SELECT MAX(ID) FROM pbm.dbo.STG_NAVITUS_CLAIMS_CONTROL WHERE FILE_TYPE = 'NAV_INV' AND ACTIVE = 1)
    -- Insert statements for procedure here
	/****** Script for SelectTopNRows command from SSMS  ******/
DECLARE @EX_RX_CLAIM TABLE(
       [SOURCE] [varchar](3) NOT NULL,
	[RX_CLAIM_ID] [varchar](15) NOT NULL,
	[LINE] [int] NOT NULL,
	[PHARM_EXTERNAL_ID] [varchar](12) NULL,
	[PHARM_NAME] [varchar](50) NULL,
	[PAT_ID] [varchar](10) NULL,
	[PAT_MRN_ID] [varchar](30) NULL,
	[MEM_UNIQUE_ID] [varchar] (30),
    [MEM_LAST_NAME] [varchar] (25),
    [MEM_FIRST_NAME] [varchar] (25),
	[MEM_NOT_FOUND_FLAG] [varchar](1) NULL,
	[ALLERGY_CODE_1] [varchar](3) NULL,
	[ALLERGY_CODE_2] [varchar](3) NULL,
	[ALLERGY_CODE_3] [varchar](3) NULL,
	[ALLERGY_CODE_4] [varchar](3) NULL,
	[ALLERGY_CODE_5] [varchar](3) NULL,
	[ALLERGY_CODE_6] [varchar](3) NULL,
	[ALLERGY_DESC_1] [varchar](30) NULL,
	[ALLERGY_DESC_2] [varchar](30) NULL,
	[ALLERGY_DESC_3] [varchar](30) NULL,
	[ALLERGY_DESC_4] [varchar](30) NULL,
	[ALLERGY_DESC_5] [varchar](30) NULL,
	[ALLERGY_DESC_6] [varchar](30) NULL,
	[ALLERGY_DATE_1] [datetime] NULL,
	[ALLERGY_DATE_2] [datetime] NULL,
	[ALLERGY_DATE_3] [datetime] NULL,
	[ALLERGY_DATE_4] [datetime] NULL,
	[ALLERGY_DATE_5] [datetime] NULL,
	[ALLERGY_DATE_6] [datetime] NULL,
	[ORDER_CODE] [varchar](10) NULL,
	[RX_NUMBER] [varchar](20) NULL,
	[RX_WRITTEN_DATE] [datetime] NULL,
	[RX_DISCONTINUE_DATE] [datetime] NULL,
	[RX_PRN] [varchar](3) NULL,
	[FILL_DATETIME] [datetime] NULL,
	[PRESCRIBE_PROV_ID] [varchar](12) NULL,
	[PRESCRIBE_PROV_DEA] [varchar](10) NULL,
	[NDC_CODE] [varchar](15) NULL,
	[RX_QUANTITY] [float] NULL,
	[TRANS_SIG] [varchar](120) NULL,
	[NUM_OF_REFILLS] [int] NULL,
	[REFILL_NUM] [int] NULL,
	[QTY_DISPENSED] [float] NULL,
	[REFILL_REMAIN] [float] NULL,
	[DAW_CODE] [char](1) NULL,
	[FORMULARY_FLAG] [char](1) NULL,
	[DAYS_SUPPLY] [int] NULL,
	[COMPND_CODE] [char](1) NULL,
	[RX_CLM_STATUS_C] [int] NOT NULL,
	[INGREDIENT_COST] [money] NULL,
	[DISPENSING_FEE] [money] NULL,
	[GROSS_AMT_DUE] [money] NULL,
	[TOT_PAT_PORTION] [money] NULL,
	[PAT_COPAY] [money] NULL,
	[PAT_DEDUCT] [money] NULL,
	[PAT_EXCEED_BEN] [money] NULL,
	[PATH_OTH_PAY] [money] NULL,
	[TOTAL_PAID] [money] NULL,
	[DRUG_AWP] [money] NULL,
	[PLAN_GRP_ID] [varchar](20) NULL,
	[PAT_PCP_PROV_ID] [varchar](12) NULL,
	[PLAN_ID] [int] NULL,
	[RKP_ID] [varchar](12) NULL,
	[SRC_ACCT_ID] [varchar](15) NULL,
	[SUBMIT_DATE] [datetime] NULL,
	[CYCLE_DATE] [datetime] NULL,
	[DATE_ENTERED] [datetime] NULL,
	[USER_ENTERED] [varchar](50) NULL,
	[DATE_MODIFIED] [datetime] NULL,
	[USER_MODIFIED] [varchar](50) NULL)
INSERT INTO @EX_RX_CLAIM
 SELECT
  SOURCE,
  RX_CLAIM_ID,
  a.LINE,
  PHARM_EXTERNAL_ID,
  PHARM_NAME,
  a.PAT_ID,
  PAT_MRN_ID,
  MEM_UNIQUE_ID,
  MEM_LAST_NAME,
  MEM_FIRST_NAME,
  MEM_NOT_FOUND_FLAG,
  ALLERGY_CODE_1,
  ALLERGY_CODE_2,
  ALLERGY_CODE_3,
  ALLERGY_CODE_4,
  ALLERGY_CODE_5,
  ALLERGY_CODE_6,
  ALLERGY_DESC_1,
  ALLERGY_DESC_2,
  ALLERGY_DESC_3,
  ALLERGY_DESC_4,
  ALLERGY_DESC_5,
  ALLERGY_DESC_6,
  ALLERGY_DATE_1,
  ALLERGY_DATE_2,
  ALLERGY_DATE_3,
  ALLERGY_DATE_4,
  ALLERGY_DATE_5,
  ALLERGY_DATE_6,
  ORDER_CODE,
  RX_NUMBER,
  RX_WRITTEN_DATE,
  RX_DISCONTINUE_DATE,
  RX_PRN,
  FILL_DATETIME,
  PRESCRIBE_PROV_ID,
  PRESCRIBE_PROV_DEA,
  NDC_CODE,
  RX_QUANTITY,
  TRANS_SIG,
  NUM_OF_REFILLS,
  REFILL_NUM,
  QTY_DISPENSED,
  REFILL_REMAIN,
  DAW_CODE,
  FORMULARY_FLAG,
  DAYS_SUPPLY,
  COMPND_CODE,
  RX_CLM_STATUS_C, 
  INGREDIENT_COST,
  DISPENSING_FEE,
  GROSS_AMOUNT_DUE AS GROSS_AMT_DUE,
  TOT_PAT_PORTION,
  PAT_COPAY,
  PAT_DEDUCT,
  PAT_EXCEED_BEN,
  PATH_OTH_PAY,
  TOTAL_PAID,
  DRUG_AWP,
  PLAN_GRP_ID,
  PAT_PCP_PROV_ID,
  PLAN_ID,
  RKP_ID,
  SRC_ACCT_ID,
  SUBMIT_DATE,
  CYCLE_DATE,
  DATE_ENTERED,
  USER_ENTERED,
  DATE_MODIFIED,
  USER_MODIFIED
  FROM (
  SELECT
  'NVS' AS SOURCE,
  STG_NAVITUS_CLAIMS.SERVICE_DT,
  STG_NAVITUS_CLAIMS.CLM_AUTH_NUM,
  IIF( STG_NAVITUS_CLAIMS.CLAIM_STS <> 'REVERSAL',STG_NAVITUS_CLAIMS.CLM_AUTH_NUM,PAID_CLM_AUTH_NUM) AS RX_CLAIM_ID,
  '999' AS LINE,
   STG_NAVITUS_CLAIMS.SUBMIT_PHARM_ID AS PHARM_EXTERNAL_ID,
   STG_NAVITUS_CLAIMS.PHARM_NAME,
   PATIENT.PAT_ID,
   PATIENT.PAT_MRN_ID AS PAT_MRN_ID,
   STG_NAVITUS_CLAIMS.MEM_UNIQUE_ID,
   STG_NAVITUS_CLAIMS.MEM_LAST_NAME,
   STG_NAVITUS_CLAIMS.MEM_FIRST_NAME,
   STG_NAVITUS_CLAIMS_CONTROL.ID,
   NULL AS ALLERGY_CODE_1,
   NULL AS ALLERGY_CODE_2,
   NULL AS ALLERGY_CODE_3,
   NULL AS ALLERGY_CODE_4,
   NULL AS ALLERGY_CODE_5,
   NULL AS ALLERGY_CODE_6,
   NULL AS ALLERGY_DESC_1,
   NULL AS ALLERGY_DESC_2,
   NULL AS ALLERGY_DESC_3,
   NULL AS ALLERGY_DESC_4,
   NULL AS ALLERGY_DESC_5,
   NULL AS ALLERGY_DESC_6,
   NULL AS ALLERGY_DATE_1,
   NULL AS ALLERGY_DATE_2,
   NULL AS ALLERGY_DATE_3,
   NULL AS ALLERGY_DATE_4,
   NULL AS ALLERGY_DATE_5,
   NULL AS ALLERGY_DATE_6,
   IIF(IDENTITY_ID.IDENTITY_TYPE_ID is null,'1','0') AS MEM_NOT_FOUND_FLAG,--WILL BE IGNORED IN APP
   CASE WHEN STG_NAVITUS_CLAIMS.REFILL_CD  = '' THEN '' 
       WHEN  STG_NAVITUS_CLAIMS.REFILL_CD  = '00' THEN 'NW'
	   ELSE  'RE'
  END AS ORDER_CODE,
  STG_NAVITUS_CLAIMS.RX_NUMBER,
  STG_NAVITUS_CLAIMS.WRITTEN_DT AS RX_WRITTEN_DATE,
  NULL AS RX_DISCONTINUE_DATE,
  IIF(STG_NAVITUS_CLAIMS.REFILLS_AUTH = '99', 'PRN','') AS RX_PRN,
  STG_NAVITUS_CLAIMS.SERVICE_DT AS FILL_DATETIME,
  IDENTITY_SER_ID.PROV_ID AS PRESCRIBE_PROV_ID,
  STG_NAVITUS_CLAIMS.PRESCRIBER_ID AS PRESCRIBE_PROV_DEA,
  CASE 
	WHEN LEN(NDC_NUM) = 11 THEN SUBSTRING(NDC_NUM, 1,5)+'-'+SUBSTRING(NDC_NUM,6,4)+'-'+SUBSTRING(NDC_NUM,10,2)
	ELSE +SUBSTRING(NDC_NUM,0,15) 
  END AS NDC_CODE,
  STG_NAVITUS_CLAIMS.RX_CLARIFICATION_CD,--NEEDED?
  null AS RX_QUANTITY,
  null AS TRANS_SIG,
  STG_NAVITUS_CLAIMS.REFILLS_AUTH AS NUM_OF_REFILLS,
  CAST(IIF(STG_NAVITUS_CLAIMS.REFILL_CD > 0, STG_NAVITUS_CLAIMS.REFILL_CD, '0') AS INT) AS REFILL_NUM,
  STG_NAVITUS_CLAIMS.METRIC_DECIMAL_QTY AS QTY_DISPENSED,
  NULL AS REFILL_REMAIN,
  NULL  AS DAW_CODE,
  IIF(STG_NAVITUS_CLAIMS.CLAIM_STS = 'PAID' AND STG_NAVITUS_CLAIMS.MPA_REASON_CD <> 'OI', 'Y', 'N') AS FORMULARY_FLAG,
  STG_NAVITUS_CLAIMS.DAYS_SUPPLY,
  STG_NAVITUS_CLAIMS.COMPOUND_CD AS COMPND_CODE,
  CASE 
	WHEN STG_NAVITUS_CLAIMS.CLAIM_STS = 'PAID' THEN 1
	WHEN STG_NAVITUS_CLAIMS.CLAIM_STS = 'REVERSAL' THEN 2
	WHEN STG_NAVITUS_CLAIMS.CLAIM_STS = 'REJECTED' THEN 3
	ELSE 99
  END as RX_CLM_STATUS_C, 
  STG_NAVITUS_CLAIMS.APPRVD_INGR_COST + APPRVD_SALES_TAX AS INGREDIENT_COST,
  STG_NAVITUS_CLAIMS.APPRVD_DISPNSR_FEE AS  DISPENSING_FEE,
   STG_NAVITUS_CLAIMS.APPRVD_INGR_COST + APPRVD_SALES_TAX + STG_NAVITUS_CLAIMS.APPRVD_DISPNSR_FEE  AS GROSS_AMOUNT_DUE,
  STG_NAVITUS_CLAIMS.APPRVD_MEMBER_PAID TOT_PAT_PORTION,
  PAT_COPAY = 0,
  STG_NAVITUS_CLAIMS.APPRVD_DEDUCT_AMT AS PAT_DEDUCT,
  PAT_EXCEED_BEN = 0,
  PATH_OTH_PAY = 0,
  STG_NAVITUS_CLAIMS.APPRVD_GROSS_DUE AS TOTAL_PAID,
  STG_NAVITUS_CLAIMS.AWP_UNIT_PRICE AS DRUG_AWP,
  NULL AS PLAN_GRP_ID,
  NULL AS  PAT_PCP_PROV_ID,
  NULL AS PLAN_ID,
  NULL AS RKP_ID,
  STG_NAVITUS_CLAIMS.CARRIER_ID AS SRC_ACCT_ID,
  STG_NAVITUS_CLAIMS.SUBMIT_DT AS SUBMIT_DATE,
  STG_NAVITUS_CLAIMS_CONTROL.CREATED_DATE AS CYCLE_DATE,
  STG_NAVITUS_CLAIMS.GHC_LOAD_DATE AS DATE_ENTERED,
  'PBM001ETL' AS USER_ENTERED,
  STG_NAVITUS_CLAIMS.GHC_LOAD_DATE AS DATE_MODIFIED,
  'PBM001ETL' AS USER_MODIFIED
FROM 
	[pbm].[dbo].[STG_NAVITUS_CLAIMS]
  LEFT OUTER JOIN PBM.dbo.STG_NAVITUS_CLAIMS_CONTROL
    ON STG_NAVITUS_CLAIMS.FILE_ID = STG_NAVITUS_CLAIMS_CONTROL.ID
  LEFT OUTER JOIN clarity.dbo.IDENTITY_ID
    ON STG_NAVITUS_CLAIMS.MEM_UNIQUE_ID = IDENTITY_ID.IDENTITY_ID
  LEFT JOIN clarity.dbo.IDENTITY_SER_ID 
    ON STG_NAVITUS_CLAIMS.PRESCRIBER_ID = IDENTITY_SER_ID.IDENTITY_ID
  LEFT OUTER JOIN clarity.dbo.PATIENT
    ON IDENTITY_ID.PAT_ID = PATIENT.PAT_ID

  WHERE  
   (IDENTITY_ID.IDENTITY_TYPE_ID = 0 OR IDENTITY_ID.IDENTITY_TYPE_ID is null)
	  AND (IDENTITY_SER_ID.IDENTITY_TYPE_ID = 11 or IDENTITY_SER_ID.IDENTITY_TYPE_ID is null)
	  AND STG_NAVITUS_CLAIMS_CONTROL.FILE_TYPE = 'NAV_INV'
	  AND FILE_ID = @FILE_ID
	  AND CLAIM_STS  IN('PAID','REVERSAL')
	) AS A

WHERE 

	rtrim(ltrim(RX_CLAIM_ID)) NOT IN (
	SELECT 
		PAID_CLM_AUTH_NUM 
	FROM 
		pbm.dbo.STG_NAVITUS_CLAIMS   
	LEFT OUTER JOIN PBM.dbo.STG_NAVITUS_CLAIMS_CONTROL
		ON STG_NAVITUS_CLAIMS.FILE_ID = STG_NAVITUS_CLAIMS_CONTROL.ID
    WHERE 
		 FILE_ID =  @FILE_ID)
		 ORDER BY RX_CLAIM_ID
	
	
INSERT INTO clarity.dbo.EX_RX_CLAIM
	SELECT  
	SOURCE,
  RX_CLAIM_ID,
  LINE,
  PHARM_EXTERNAL_ID,
  PHARM_NAME,
  PAT_ID,
  PAT_MRN_ID,
  ALLERGY_CODE_1,
  ALLERGY_CODE_2,
  ALLERGY_CODE_3,
  ALLERGY_CODE_4,
  ALLERGY_CODE_5,
  ALLERGY_CODE_6,
  ALLERGY_DESC_1,
  ALLERGY_DESC_2,
  ALLERGY_DESC_3,
  ALLERGY_DESC_4,
  ALLERGY_DESC_5,
  ALLERGY_DESC_6,
  ALLERGY_DATE_1,
  ALLERGY_DATE_2,
  ALLERGY_DATE_3,
  ALLERGY_DATE_4,
  ALLERGY_DATE_5,
  ALLERGY_DATE_6,
  ORDER_CODE,
  RX_NUMBER,
  RX_WRITTEN_DATE,
  RX_DISCONTINUE_DATE,
  RX_PRN,
  FILL_DATETIME,
  PRESCRIBE_PROV_ID,
  PRESCRIBE_PROV_DEA,
  NDC_CODE,
  RX_QUANTITY,
  TRANS_SIG,
  NUM_OF_REFILLS,
  REFILL_NUM,
  QTY_DISPENSED,
  REFILL_REMAIN,
  DAW_CODE,
  FORMULARY_FLAG,
  DAYS_SUPPLY,
  COMPND_CODE,
  RX_CLM_STATUS_C, 
  INGREDIENT_COST,
  DISPENSING_FEE,
  GROSS_AMT_DUE,
  TOT_PAT_PORTION,
  PAT_COPAY,
  PAT_DEDUCT,
  PAT_EXCEED_BEN,
  PATH_OTH_PAY,
  TOTAL_PAID,
  DRUG_AWP,
  PLAN_GRP_ID,
  PAT_PCP_PROV_ID,
  PLAN_ID,
  RKP_ID,
  SRC_ACCT_ID,
  SUBMIT_DATE,
  CYCLE_DATE,
  DATE_ENTERED,
  USER_ENTERED,
  DATE_MODIFIED,
  USER_MODIFIED FROM ( SELECT
  SOURCE,
  RX_CLAIM_ID,
  [@EX_RX_CLAIM].LINE,
  PHARM_EXTERNAL_ID,
  PHARM_NAME,
  [@EX_RX_CLAIM].PAT_ID,
  PAT_MRN_ID,
   DENSE_RANk() over       
  (PARTITION BY  [@EX_RX_CLAIM].PAT_ID ORDER BY  [@EX_RX_CLAIM].PAT_ID ASC, VC_PAT_CVG_FILE_ORDER.FILING_ORDER) AS RANK_LINE,
  ALLERGY_CODE_1,
  ALLERGY_CODE_2,
  ALLERGY_CODE_3,
  ALLERGY_CODE_4,
  ALLERGY_CODE_5,
  ALLERGY_CODE_6,
  ALLERGY_DESC_1,
  ALLERGY_DESC_2,
  ALLERGY_DESC_3,
  ALLERGY_DESC_4,
  ALLERGY_DESC_5,
  ALLERGY_DESC_6,
  ALLERGY_DATE_1,
  ALLERGY_DATE_2,
  ALLERGY_DATE_3,
  ALLERGY_DATE_4,
  ALLERGY_DATE_5,
  ALLERGY_DATE_6,
  ORDER_CODE,
  RX_NUMBER,
  RX_WRITTEN_DATE,
  RX_DISCONTINUE_DATE,
  RX_PRN,
  FILL_DATETIME,
  PRESCRIBE_PROV_ID,
  PRESCRIBE_PROV_DEA,
  NDC_CODE,
  RX_QUANTITY,
  TRANS_SIG,
  NUM_OF_REFILLS,
  REFILL_NUM,
  QTY_DISPENSED,
  REFILL_REMAIN,
  DAW_CODE,
  FORMULARY_FLAG,
  DAYS_SUPPLY,
  COMPND_CODE,
  RX_CLM_STATUS_C, 
  INGREDIENT_COST,
  DISPENSING_FEE,
  GROSS_AMT_DUE,
  TOT_PAT_PORTION,
  PAT_COPAY,
  PAT_DEDUCT,
  PAT_EXCEED_BEN,
  PATH_OTH_PAY,
  TOTAL_PAID,
  DRUG_AWP,
  COVERAGE.PLAN_GRP_ID,
  PAT_PCP.PCP_PROV_ID AS  PAT_PCP_PROV_ID,
  PLAN_GRP_BEN_PLAN.BEN_PLAN_ID AS PLAN_ID,
  CLARITY_SER_RKP.RKP_ID,
  SRC_ACCT_ID,
  SUBMIT_DATE,
  CYCLE_DATE,
  DATE_ENTERED,
  USER_ENTERED,
  DATE_MODIFIED,
  USER_MODIFIED 
  FROM @EX_RX_CLAIM
	  LEFT OUTER JOIN clarity.dbo.PAT_PCP
    ON [@EX_RX_CLAIM].PAT_ID = PAT_PCP.PAT_ID
  LEFT OUTER JOIN clarity.dbo.CLARITY_SER_RKP
    ON PAT_PCP.PCP_PROV_ID = CLARITY_SER_RKP.PROV_ID
  LEFT OUTER JOIN clarity.dbo.COVERAGE_MEM_LIST
	ON COVERAGE_MEM_LIST.PAT_ID = [@EX_RX_CLAIM].PAT_ID
  LEFT OUTER JOIN clarity.dbo.COVERAGE
    ON COVERAGE_MEM_LIST.COVERAGE_ID = COVERAGE.COVERAGE_ID
  LEFT OUTER JOIN fw.dbo.VC_PAT_CVG_FILE_ORDER 
    ON COVERAGE_MEM_LIST.COVERAGE_ID = VC_PAT_CVG_FILE_ORDER.COVERAGE_ID
       AND COVERAGE_MEM_LIST.PAT_ID = VC_PAT_CVG_FILE_ORDER.PAT_ID
  LEFT OUTER JOIN CLARITY.DBO.PLAN_GRP_BEN_PLAN
    ON COVERAGE.PLAN_GRP_ID = PLAN_GRP_BEN_PLAN.PLAN_GRP_ID
	   AND PLAN_GRP_BEN_PLAN.BEN_PLAN_EFF_DATE <= [@EX_RX_CLAIM].FILL_DATETIME
	   AND (BEN_PLAN_TERM_DT is null or BEN_PLAN_TERM_DT >= [@EX_RX_CLAIM].FILL_DATETIME)
  LEFT OUTER JOIN clarity.dbo.ZC_COVERAGE_TYPE
      ON COVERAGE.COVERAGE_TYPE_C = ZC_COVERAGE_TYPE.COVERAGE_TYPE_C
  LEFT OUTER JOIN CLARITY.DBO.PLAN_GRP
      ON PLAN_GRP.PLAN_GRP_ID = COVERAGE.PLAN_GRP_ID
  LEFT OUTER JOIN CLARITY.DBO.PLAN_GRP_OT_ATTR
      ON PLAN_GRP_OT_ATTR.PLAN_GRP_ID = PLAN_GRP.PLAN_GRP_ID
		AND PLAN_GRP_OT_ATTR.CONTACT_DATE_REAL = (SELECT MAX(CONTACT_DATE_REAL) FROM [clarity].[dbo].[PLAN_GRP_OT_ATTR] OT_ATTR
						WHERE PLAN_GRP_OT_ATTR.PLAN_GRP_ID =  OT_ATTR.PLAN_GRP_ID )
WHERE
  	  (CLARITY_SER_RKP.EFF_DATE is null or CLARITY_SER_RKP.EFF_DATE <=  [@EX_RX_CLAIM].FILL_DATETIME)
      AND (CLARITY_SER_RKP.TERM_DATE is null or CLARITY_SER_RKP.TERM_DATE >=  [@EX_RX_CLAIM].FILL_DATETIME)
	  AND (PAT_PCP.EFF_DATE is null or PAT_PCP.EFF_DATE <=  [@EX_RX_CLAIM].FILL_DATETIME)
	  AND (PAT_PCP.TERM_DATE is null or PAT_PCP.TERM_DATE >=  [@EX_RX_CLAIM].FILL_DATETIME)
	  AND PAT_PCP.PCP_TYPE_C = '1'
	  AND (PAT_PCP.DELETED_YN is null or PAT_PCP.DELETED_YN = 'N')
	  AND ISNULL(PLAN_GRP_OT_ATTR.REGION_CODE_C, '') NOT IN ('5') --Exclude Dental Coverage
	  AND (MEM_EFF_FROM_DATE is null or MEM_EFF_FROM_DATE <=  [@EX_RX_CLAIM].FILL_DATETIME)
	  AND (MEM_EFF_TO_DATE is null or MEM_EFF_TO_DATE >=  [@EX_RX_CLAIM].FILL_DATETIME)
      AND COVERAGE.COVERAGE_TYPE_C ='2') AS a 
	WHERE a.RANK_LINE = 1


INSERT INTO pbm.dbo.EX_CLAIMS_CONTROL
SELECT DISTINCT
	'NVS' AS SOURCE,
	CAST(@FILE_ID AS INT) AS STG_NAVITUS_CLAIMS_CONTROL_FILE_ID,
	(SELECT COUNT(*) FROM @EX_RX_CLAIM) AS RECORD_COUNT,
	[@EX_RX_CLAIM].DATE_ENTERED AS CLAIM_LOAD_DATE,
	GETDATE() AS CREATE_DATE
 FROM @EX_RX_CLAIM

	SELECT 
	* FROM (  
SELECT 'INTERNAL' AS TYPE,COUNT(*) AS COUNT,SUM(TOTAL_PAID) AS TOTAL_PAID
FROM @EX_RX_CLAIM
INNER JOIN  clarity.dbo.EX_GHC_PHARMACIES
     ON [@EX_RX_CLAIM].PHARM_EXTERNAL_ID = EX_GHC_PHARMACIES.PHARM_EXTERNAL_ID
  WHERE [@EX_RX_CLAIM].FILL_DATETIME >=  ISNULL(EX_GHC_PHARMACIES.EFFECTIVE_DATE,'1/1/1900')
  AND [@EX_RX_CLAIM].FILL_DATETIME <= ISNULL(EX_GHC_PHARMACIES.TERM_DATE,'12/31/2099')
 
UNION
( SELECT 'EXTERNAL' AS TYPE,COUNT(*) AS COUNT,  SUM(TOTAL_PAID) AS TOTAL_PAID
FROM @EX_RX_CLAIM
LEFT OUTER JOIN  clarity.dbo.EX_GHC_PHARMACIES
     ON [@EX_RX_CLAIM].PHARM_EXTERNAL_ID = EX_GHC_PHARMACIES.PHARM_EXTERNAL_ID
  WHERE [@EX_RX_CLAIM].FILL_DATETIME >=  ISNULL(EX_GHC_PHARMACIES.EFFECTIVE_DATE,'1/1/1900')
  AND [@EX_RX_CLAIM].FILL_DATETIME <= ISNULL(EX_GHC_PHARMACIES.TERM_DATE,'12/31/2099')
  AND EX_GHC_PHARMACIES.PHARM_EXTERNAL_ID is null)
 UNION
  ( SELECT 'TOTAL' AS TYPE,COUNT(*) AS COUNT,  SUM(TOTAL_PAID) AS TOTAL_PAID
FROM @EX_RX_CLAIM
LEFT OUTER JOIN  clarity.dbo.EX_GHC_PHARMACIES
     ON [@EX_RX_CLAIM].PHARM_EXTERNAL_ID = EX_GHC_PHARMACIES.PHARM_EXTERNAL_ID
  WHERE [@EX_RX_CLAIM].FILL_DATETIME >=  ISNULL(EX_GHC_PHARMACIES.EFFECTIVE_DATE,'1/1/1900')
  AND [@EX_RX_CLAIM].FILL_DATETIME <= ISNULL(EX_GHC_PHARMACIES.TERM_DATE,'12/31/2099')
  
  )) Internal

END



GO


